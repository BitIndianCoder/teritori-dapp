/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.16.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Uint128 = string;
export type Addr = string;
export type AllNftsInVaultResponse = NFTInfo[];
export interface NFTInfo {
  amount: Uint128;
  denom: string;
  nft_contract_addr: Addr;
  nft_token_id: string;
  [k: string]: unknown;
}
export interface ConfigResponse {
  fee_bp: Uint128;
  owner: string;
  [k: string]: unknown;
}
export type ExecuteMsg = {
  update_config: {
    fee_bp?: Uint128 | null;
    owner?: string | null;
    [k: string]: unknown;
  };
} | {
  receive_nft: Cw721ReceiveMsg;
} | {
  withdraw: {
    nft_contract_addr: string;
    nft_token_id: string;
    [k: string]: unknown;
  };
} | {
  update_price: {
    amount: Uint128;
    denom: string;
    nft_contract_addr: string;
    nft_token_id: string;
    [k: string]: unknown;
  };
} | {
  buy: {
    nft_contract_addr: string;
    nft_token_id: string;
    [k: string]: unknown;
  };
} | {
  withdraw_fee: {
    [k: string]: unknown;
  };
};
export type Binary = string;
export interface Cw721ReceiveMsg {
  msg: Binary;
  sender: string;
  token_id: string;
  [k: string]: unknown;
}
export interface InstantiateMsg {
  fee_bp: Uint128;
  [k: string]: unknown;
}
export interface NftInfoResponse {
  amount: Uint128;
  denom: string;
  nft_contract_addr: Addr;
  nft_token_id: string;
  [k: string]: unknown;
}
export type NftListResponse = NFTInfo[];
export type NftOwnerInfoResponse = string;
export type QueryMsg = {
  config: {
    [k: string]: unknown;
  };
} | {
  nft_list: {
    wallet: string;
    [k: string]: unknown;
  };
} | {
  all_nfts_in_vault: {
    limit?: number | null;
    start_after?: string | null;
    [k: string]: unknown;
  };
} | {
  nft_info: {
    nft_contract_addr: string;
    nft_token_id: string;
    wallet: string;
    [k: string]: unknown;
  };
} | {
  nft_owner_info: {
    nft_contract_addr: string;
    nft_token_id: string;
    [k: string]: unknown;
  };
};
export interface RoyaltiesInfoResponse {
  address: string;
  royalty_amount: Uint128;
  [k: string]: unknown;
}
export interface RoyaltyInfo {
  sale_price: Uint128;
  token_id: string;
  [k: string]: unknown;
}